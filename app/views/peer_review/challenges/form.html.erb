<% nav_add 'Desafíos', peer_review_challenges_path %>
<% nav_add @challenge.title, peer_review_challenge_path(@challenge) unless @challenge.new_record? %>
<% nav_add @labels.title, '#' %>
<%= nav_render %>

<%= simple_form_for @challenge do |f| %>

  <%= render :partial => 'shared/errors', locals: { f: f } %>
  
  <%= f.input :title, label: 'Título' %>

  <%= f.input :difficulty, label: 'Dificultad', input_html: { min: 1, max: 5 } %>

  <%= f.input :challenge_mode, collection: PeerReview::Challenge.challenge_modes.map { |key, _| [key.humanize, key]} %>

  <%= f.input :due_date, label: 'Vencimiento', as: :date, html5: true %>
    
  <%= f.input :solution_type, label: 'Solución', collection: PeerReview::Challenge.solution_types.map { |key, _| [key.humanize, key]}, include_blank: false %>

  <%= f.input :language, label: 'Lenguaje', collection: %w(cpp java python), include_blank: true %>

  <%= f.input :expected_reviews, label: 'Revisiones esperadas', input_html: { min: 0 } %>

  <%= f.input :allows_attachment, label: 'Permite archivo adjunto' %>

  <%= f.input :allows_quick_reviews, label: 'Permite revisiones rápidas (sólo docentes)' %>

  <%= f.input :team_challenge, label: 'Desafío por equipos' %>
  
  <%= f.input :optional, label: 'Desafío opcional' %>

  <%= f.input :instructions, label: 'Instrucciones', as: :trix_editor %>

  <%= f.input :reviewer_instructions, label: 'Instrucciones para el revisor', as: :trix_editor %>

  <div id="app">
    <h2>Rúbrica de corrección</h2>

    <p>Los criterios permitirán al revisor puntuar con calificaciones del 1 al 5.</p>

    <table class="table table-stripped table-hover">
      <thead>
      <tr>
        <th>Título</th>
        <th>Criterios</th>
        <th></th>
      </tr>
      </thead>
      <tbody>
      <tr v-for="(rubric, index) in rubrics">
        <td>
          <input class="form-control required" type="text" v-model="rubric.title" required="required"
                 :name="'challenge[rubrics][' + rubric.id + '][title]'">
        </td>
        <td>
          <input class="form-control required" type="text" v-model="rubric.criteria" required="required"
                 :name="'challenge[rubrics][' + rubric.id + '][criteria]'">
        </td>
        <td>
          <button type="button" class="btn btn-danger" v-on:click="removeEntry(rubric)"
                  style="vertical-align: bottom">
            <i class="fa fa-trash"></i>
          </button>
        </td>
      </tr>
      </tbody>
    </table>

    <button type="button" @click="addRubric()" class="btn btn-secondary">
      <i class="fa fa-plus"></i>
    </button>
  </div>

  <br>

  <%= f.button :submit, @labels.button, class: 'btn-primary' %>

<% end %>

<% content_for :head do %>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/trix/0.12.0/trix.css" rel="stylesheet">
<% end %>

<% content_for :javascript do %>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/trix/0.12.0/trix.js" type="application/javascript"></script>

  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

  <script>

      var app = new Vue({
          el: '#app',
          data: {
              rubrics: <%= raw (@challenge.rubrics || []).each_with_index.map { | rubric, index |
                  {
                      id: index,
                      title: rubric["title"],
                      criteria: rubric["criteria"]
                  }
              }.to_json %>
          },
          methods: {
              addRubric: function () {
                  this.rubrics.push({
                      id: new Date().getTime(),
                      title: null,
                      criteria: null
                  });
              },
              removeEntry: function (deletable) {
                  x = this.rubrics.indexOf(deletable);
                  this.rubrics.splice(x, 1);
              }
          }
      });

  </script>

<% end %>
